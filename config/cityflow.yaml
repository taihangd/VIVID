# scalability analysis parameters
video_time: 100000 # set parameters: traj_len, video_time big enough
node_num: 100000
traj_len: 100000

# algorithm setting parameters
time_gap: 100 # for merging adjacent nodes
cam_cand_num: 10 # max number of candidates in one camera

fps: 10
down_sample_fps: 10

# dataset parameters
dataset: "cityflow"
dataset_path: "/mnt/data_hdd_large/dth/home/data/cityflow_orig_data/"
traj_gt_path: "/mnt/data_hdd_large/dth/home/data/cityflow_orig_data/test_set_traj_road_network_comp_gt_range/test_set_traj_road_network_comp_gt_range_100/"

cam_node_file: '/mnt/data_hdd_large/dth/home/data/cityflow_orig_data/road_info/road_nodes.txt'
node_feats_path: '/mnt/data_hdd_large/dth/home/data/cityflow_orig_data/feat_extract/gf_feats_bin/'
orig_node_feats_path: '/mnt/data_hdd_large/dth/home/data/cityflow_orig_data/feat_extract/gf_feats/'
query_feats_path: '/mnt/data_hdd_large/dth/home/data/cityflow_orig_data/feat_extract/query_feats/'
app_feats_index_path: '/mnt/data_hdd_large/dth/home/data/cityflow_orig_data/feat_extract/idx_file/features.index'
plate_feats_index_path: ''

# cache_data about road graph and shortest path
road_graph_file: "cache_data/road_graph_cityflow.pkl"
shortest_path_results_file: "cache_data/shortest_path_results_cityflow.pkl"
cam_path_neighbor_dict_file: "cache_data/cam_path_neighbor_dict.pkl"
cam_path_sec_ratio_file: "cache_data/cam_path_sec_ratio.pkl"
cid_to_rid_file: "cache_data/cid_rid_correspondence.pkl"

# index related parameters
ngpu: 0 # the GPU number for index retrieval
select_ratio: 10 # the select ratio for building index
frame_tpye_byte_num: 8 # int format, need to be keep in line with binary format
feat_dim: 2048 # the feature dimension
k: 1000 # faiss function search space
sim_thres: 0.25 # similarity threshold to truncate distance list

# trajectory generation parameters
topk_filtering_coef: 4. # the coefficient for filtering topk nodes
vel_range_coeff: 5. # velocity range coefficient for standard deviation
vel_std_thres: 200. # velocity standard deviation threshold
neighbor_cam_num_thres: 1000 # neighbor camera number threshold
merge_time_gap: 400 # time range threshold for merging adjacent nodes in graph completion
u_turn_penalty_coeff: -0.5 # the penalty coefficient for u-turn
edge_weight_thres: 0.0 # the edge weight threshold for filt out some edges

# output directory
output_path: "res/outputs/"

# all camera id list
cam_id_list: [1, 2, 3, 4, 5, 6, 8, 9, 10, 13, 14, 17, 18, 
              19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 
              32, 34, 36, 38, 39, 44, 45, 91, 92, 95, 96, 
              106, 107, 108, 113, 114]

# save topk candidates
topk_cand_save: False
topk_cand_path: '/mnt/data_hdd_large/dth/home/data/denoise/topk_cand/'
save_vel_distrib: True

