# scalability analysis parameters
video_time: 100000 # set parameters: traj_len, video_time big enough
node_num: 157
traj_len: 100000

# algorithm setting parameters
time_gap: 400 # for merging adjacent nodes
cam_cand_num: 10 # max number of candidates in one camera

fps: 1
down_sample_fps: 1

## dataset parameters
dataset: "uv"
dataset_path: '/mnt/data_hdd_large/dth/home/data/MMVC/mmvc_dataset/'
dist_file: '/mnt/data_hdd_large/dth/home/data/MMVC/mmvc_dataset/map/all_pairs_route_distance.csv'
traj_gt_path: '/mnt/data_hdd_large/dth/home/data/MMVC/urban_vehicle/traj_gt/records_200w/'
time_range_file: '/mnt/data_hdd_large/dth/home/data/MMVC/urban_vehicle/time_range.txt'

cam_node_file: '/mnt/data_hdd_large/dth/home/data/MMVC/cameras.json'
node_feats_path: '/mnt/data_hdd_large/dth/home/data/MMVC/mmvc_dataset/feature/records_200w/gf_feats_bin/'
orig_node_feats_path: '/mnt/data_hdd_large/dth/home/data/MMVC/mmvc_dataset/feature/records_200w/gf_feats/'
query_feats_path: '/mnt/data_hdd_large/dth/home/data/MMVC/urban_vehicle/query/records_200w/'
app_feats_index_path: '/mnt/data_hdd_large/dth/home/data/MMVC/mmvc_dataset/feature/records_200w/app_feat_features.index'
plate_feats_index_path: '/mnt/data_hdd_large/dth/home/data/MMVC/mmvc_dataset/feature/records_200w/plate_feat_features.index'

# cache_data about road graph and shortest path
road_graph_file: "cache_data/road_graph.pkl"
shortest_path_results_file: "cache_data/cam_shortest_path_result.pkl"
cam_path_neighbor_dict_file: "cache_data/cam_path_neighbor_dict.pkl"
cam_path_sec_ratio_file: "cache_data/cam_path_sec_ratio.pkl"
cid_to_rid_file: "cache_data/cid_rid_correspondence.pkl"

# index related parameters
ngpu: 0 # the GPU number for index retrieval
select_ratio: 10 # the select ratio for building index
frame_tpye_byte_num: 8 # int format, need to be keep in line with binary format
feat_dim: 256 # the feature dimension
k: 150 # faiss function search space
sim_thres: 0.6 # similarity threshold to truncate distance list

# trajectory generation parameters
topk_filtering_coef: 2. # the coefficient for filtering topk nodes
vel_range_coeff: 5. # velocity range coefficient for standard deviation
vel_std_thres: 400. # velocity standard deviation threshold
neighbor_cam_num_thres: 1000 # neighbor camera number threshold
merge_time_gap: 400 # time range threshold for merging adjacent nodes in graph completion
u_turn_penalty_coeff: 0. # the penalty coefficient for u-turn
edge_weight_thres: 0. # the edge weight threshold for filt out some edges

# output directory
output_path: "res/outputs/"

# all camera id list
cam_id_list: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
              12, 13, 14, 15, 16, 17, 18, 19, 20, 
              21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 
              31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 
              41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 
              51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 
              61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 
              71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 
              81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 
              91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 
              101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 
              111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 
              121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 
              131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
              141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
              151, 152, 153, 154, 155, 156]

# if use the plate information
use_plate: True

# save topk candidates
# topk_cand_save: True
topk_cand_save: False
topk_cand_path: '/mnt/data_hdd_large/dth/home/data/denoise/topk_cand/'
save_vel_distrib: True

